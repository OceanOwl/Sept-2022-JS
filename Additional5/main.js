// Всі функції повинні бути описані стрілочним типом!!!!
//     - створити функцію яка приймає три числа та виводить найменьше. (Без Math.min!)


// - створити функцію яка приймає три числа та виводить найбільше. (Без Math.max!)


// - створити функцію яка повертає найбільше число з масиву


// - створити функцію яка повертає найменьше число з масиву


// - створити функцію яка приймає масив чисел, сумує значення елементів масиву та повертає його. Приклад [1,2,10]->13
//
// let arr = [1, 2, 10];
// const xxx = (arr) => {
//     let result = 0;
//     for (const item of arr) {
//         result += item
//     }
//     return result
// }
// console.log(xxx(arr));


//
//
//


// - Дано натуральное число n. Выведите все числа от 1 до n.
// let arr = [];
// const xxx = (n) => {
//     for (let i = 0; i < n; i++) {
//         arr.push(i)
//     }
//     return arr
// }
// console.log(xxx(6));

// - Даны два целых числа A и В . Выведите все числа от A до B включительно, в порядке возрастания, если A < B, или в порядке убывания в противном случае.
//
// const xxx = (a, b) => {
//     let arr = [];
//     if (a > b) {
//         for (let i = a; i <= b; i++) {
//             const arrElement = arr[i];
//             arr.push(arrElement)
//         }
//     } else if (a < b) {
//         for (let i = a; i => b; i--) {
//             const arrElement = arr[i];
//             arr.push(arrElement)
//
//         }
//         return arr
//     }
//
// }
// let xxx1 = xxx(20, 30);
// console.log(xxx1);


//
// -   функція Приймає масив та число "i", та міняє місцями об`єкт який знаходиться в індексі "i" на "i+1"
//   EXAMPLE:
//   foo([9,8,0,4], 0) // ==> [ 8, 9, 0, 4 ]
//   foo([9,8,0,4], 1) // ==> [ 9 ,0, 8, 4 ]
//   foo([9,8,0,4], 2) // ==> [ 9, 8, 4, 0 ]
//


// - Сворити функцію яка буде переносити елементи з значенням 0 у кінець маисву. Зберігаючи при цьому порядок не нульових значень.
// Двожина масиву від 2 до 100
// EXAMPLE:
// [1,0,6,0,3] => [1,6,3,0,0]
// [0,1,2,3,4] => [1,2,3,4,0]
// [0,0,1,0]   => [1,0,0,0]
//